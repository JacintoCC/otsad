% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cp_sd_ewma.R
\name{CpSdEwma}
\alias{CpSdEwma}
\title{Classic Processing Shift-Detection based on EWMA (SD-EWMA).}
\usage{
CpSdEwma(train.data, test.data, threshold = 0.01, l = 3)
}
\arguments{
\item{train.data}{Numerical vector that conforms the training set.}

\item{test.data}{Numerical vector that conforms the test set.}

\item{threshold}{Error smoothing constant.}

\item{l}{Control limit multiplier.}
}
\value{
Data set conformed by the following columns:

  \item{is.anomaly}{1 if the value is anomalous 0 otherwise.}
  \item{ucl}{Upper control limit.}
  \item{lcl}{Lower control limit.}
}
\description{
\code{CpSdEwma} calculates the anomalies of a data set using
classical processing based on the SD-EWMA algorithm. This algorithm is a
novel method for covariate shift-detection tests based on a two-stage
structure for univariate time-series. It works in an online mode and it uses
an exponentially weighted moving average (EWMA) model based control chart to
detect the covariate shift-point in non-stationary time-series. See also
\code{\link{OcpSdEwma}} the optimized and faster function of the same.
}
\details{
\code{train.data} and \code{test.data} must be numerical vectors
without NA values. \code{threshold} must be a numeric value between 0 and 1.
It is recommended to use low values such as 0.01 or 0.05. By default, 0.01 is
used. Finally, \code{l} is the parameter that determines the control limits.
By default, 3 is used.
}
\examples{
## Generate data
set.seed(100)
n <- 500
x <- sample(1:100, n, replace = TRUE)
x[70:90] <- sample(110:115, 21, replace = TRUE)
x[25] <- 200
x[320] <- 170
df <- data.frame(timestamp=1:n,value=x)

## Calculate anomalies
result <- CpSdEwma(
  train.data = df[1:5,"value"],
  test.data = df[6:n,"value"],
  threshold = 0.01,
  l = 3
)
res <- cbind(df[6:n,], result)
rownames(res) <- 1:(n-5)

## Plot results
y.limits <- c(-150,250)
plot(x = res$timestamp, y = res$value, type = "l", ylim = y.limits, xlab = "timestamp", ylab = "value", main = "SD-EWMA ANOMALY DETECTOR")
points(x = res[res$is.anomaly == 1, "timestamp"], y = res[res$is.anomaly == 1, "value"], pch=4, col="red", lwd = 2)
par(new=TRUE)
plot(x = res$timestamp, y = res$ucl, type="l", col="red", xaxt="n", ylim = y.limits, xlab = "", ylab = "")
par(new=TRUE)
plot(x = res$timestamp, y = res$lcl, type="l", col="red", xaxt="n", ylim = y.limits, xlab = "", ylab = "")
}
\references{
Raza, H., Prasad, G., & Li, Y. (03 de 2015). EWMA model based
shift-detection methods for detecting covariate shifts in non-stationary
environments. Pattern Recognition, 48(3), 659-669.
}
