% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cp_knn_cad.R
\name{CpKnnCad}
\alias{CpKnnCad}
\title{Classic processing KNN based Conformal Anomaly Detector (KNN-CAD)}
\usage{
CpKnnCad(data, n.train, threshold, l, n = l, m = l, k, ncm.type = "ICAD",
  reducefp = TRUE)
}
\arguments{
\item{data}{Numerical vector with training and test dataset.}

\item{n.train}{Number of points of the dataset that correspond to the
training set.}

\item{threshold}{Anomaly threshold.}

\item{l}{Window length.}

\item{n}{Number of training set rows.}

\item{m}{Number of calibration set rows.}

\item{k}{Number of neighbours to take into account.}

\item{ncm.type}{Non Conformity Measure to use \"ICAD\" or \"LDCD\"}

\item{reducefp}{If TRUE reduces false positives}
}
\value{
dataset conformed by the following columns:

  \item{is.anomaly}{1 if the value is anomalous, 0 otherwise.}
  \item{anomaly.score}{Probability of anomaly.}
}
\description{
\code{CpKnnCad} calculates the anomalies of a dataset using classical
processing based on the KNN-CAD algorithm. KNN-CAD is a model-free anomaly
detection method for univariate time-series which adapts itself to
non-stationarity in the data stream and provides probabilistic abnormality
scores based on the conformal prediction paradigm.
}
\details{
\code{data} must be a numerical vector without NA values.
\code{threshold} must be a numeric value between 0 and 1. If the anomaly
score obtained for an observation is less than the \code{threshold}, the
observation will be considered abnormal. It should be noted that, to
determine whether an observation in time t is anomalous, the dataset must
have at least \code{l}+\code{n}+\code{m} values.
}
\examples{
## Generate data
set.seed(100)
n <- 500
x <- sample(1:100, n, replace = TRUE)
x[70:90] <- sample(110:115, 21, replace = TRUE)
x[25] <- 200
x[320] <- 170
df <- data.frame(timestamp=1:n,value=x)

## Set parameters
params.KNN <- list(threshold = 0.99, n.train = 75, l = 19, n = 30, m = 25, k = 17)

## Calculate anomalies
result <- CpKnnCad(
  data = df$value,
  n.train = params.KNN$n.train,
  threshold = params.KNN$threshold,
  l = params.KNN$l,
  n = params.KNN$n,
  m = params.KNN$m,
  k = params.KNN$k,
  ncm.type = "ICAD",
  reducefp = TRUE
)

## Plot results
res <- cbind(df[(params.KNN$n.train + 1):n,], as.data.frame(result))
y.limits <- c(-150,250)
plot(x = res$timestamp, y = res$value, type = "l", ylim = y.limits,
     xlab = "timestamp", ylab = "value", main = "KNN-CAD ANOMALY DETECTOR")
points(x = res[res$is.anomaly == 1, "timestamp"],
       y = res[res$is.anomaly == 1, "value"], pch=4, col="red", lwd = 2)

}
\references{
V. Ishimtsev, I. Nazarov, A. Bernstein and E. Burnaev. Conformal
k-NN Anomaly Detector for Univariate Data Streams. ArXiv e-prints, jun. 2017.
}
